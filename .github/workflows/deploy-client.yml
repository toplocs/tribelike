name: Deploy Client to GitHub Pages

on:
  # Runs on pushes to main branch
  push:
    branches: [main]
  # Allows manual triggering with custom base path
  workflow_dispatch:
    inputs:
      base_path:
        description: 'Custom base path (e.g., /my-app). Leave empty for auto-detection'
        required: false
        type: string
        default: ''
      gun_peers:
        description: 'Gun.js peer URLs (comma-separated). Leave empty for no peers'
        required: false
        type: string
        default: ''
      router_mode:
        description: 'Router mode: hash (default, works on all static hosts) or history (requires server config)'
        required: false
        type: choice
        options:
          - hash
          - history
        default: 'hash'
      debug_mode:
        description: 'Enable Gun.js debug logging (true/false). Adds ?debug=true to deployment'
        required: false
        type: boolean
        default: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Detect GitHub Pages URL
        id: pages-url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Try to get the GitHub Pages URL via API
          if pages_url=$(gh api "repos/${{ github.repository }}/pages" --jq '.html_url' 2>/dev/null); then
            echo "📍 GitHub Pages URL detected: $pages_url"
            echo "pages_url=$pages_url" >> $GITHUB_OUTPUT
            
            # Determine base path from the actual Pages URL
            if [[ "$pages_url" == *".github.io/${{ github.event.repository.name }}"* ]]; then
              echo "📂 Standard project pages detected"
              echo "auto_base_path=/${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
            else
              echo "🌐 Custom domain or user/org pages detected"
              echo "auto_base_path=/" >> $GITHUB_OUTPUT
            fi
          else
            echo "⚠️ Could not detect Pages URL (Pages might not be enabled yet)"
            # Fallback to repository name logic
            if [[ "${{ github.event.repository.name }}" == *".github.io" ]]; then
              echo "auto_base_path=/" >> $GITHUB_OUTPUT
            else
              echo "auto_base_path=/${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
            fi
          fi
        
      - name: Build project
        run: |
          # Set base path - manual override takes precedence over auto-detection
          if [[ -n "${{ github.event.inputs.base_path }}" ]]; then
            # Use custom base path if provided
            export BASE_PATH="${{ github.event.inputs.base_path }}"
            echo "🔧 Using manual base path override: ${BASE_PATH}"
          else
            # Use auto-detected base path from Pages API
            export BASE_PATH="${{ steps.pages-url.outputs.auto_base_path }}"
            echo "🔧 Using auto-detected base path: ${BASE_PATH}"
            if [[ -n "${{ steps.pages-url.outputs.pages_url }}" ]]; then
              echo "📍 Pages URL: ${{ steps.pages-url.outputs.pages_url }}"
            fi
          fi
          
          # Set Gun.js peers if provided
          if [[ -n "${{ github.event.inputs.gun_peers }}" ]]; then
            export VITE_GUN_PEERS="${{ github.event.inputs.gun_peers }}"
            echo "🔫 Using Gun peers: ${VITE_GUN_PEERS}"
          else
            export VITE_GUN_PEERS=""
            echo "🔫 No Gun peers configured (local storage only)"
          fi
          
          # Set router mode (defaults to hash for static hosting)
          export VITE_ROUTER_MODE="${{ github.event.inputs.router_mode || 'hash' }}"
          echo "🔧 Using router mode: ${VITE_ROUTER_MODE}"
          
          # Set debug mode if requested
          if [[ "${{ github.event.inputs.debug_mode }}" == "true" ]]; then
            export VITE_DEBUG_MODE="true"
            echo "🐛 Debug mode enabled"
          fi
          
          # Build client without TypeScript checking due to upstream type errors
          # This is temporary until type issues are resolved in the main codebase
          pnpm run -F client build-only
          
          # Build server (required for serving the client)
          pnpm run -F server build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload client build output
          path: ./client/server/src/views

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment URLs
        run: |
          echo "🚀 Deployment Complete!"
          echo "====================="
          
          # Display the deployment URL based on repository type
          if [[ "${{ github.event.repository.name }}" == *".github.io" ]]; then
            # User/Org GitHub Pages site (e.g., username.github.io)
            echo "📍 Your site is live at: https://${{ github.repository_owner }}.github.io/"
          else
            # Project GitHub Pages site
            echo "📍 Your site is live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          fi
          
          echo ""
          echo "💡 Note: If you have a custom domain configured in GitHub Pages settings,"
          echo "   your site will be available at that domain instead."
          echo "====================="