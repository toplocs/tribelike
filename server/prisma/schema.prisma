// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  username String    @unique()
  email    String    @unique()  // As email is in Profiles, maybe not needed
  password String
  profiles Profile[]
}

model Settings { 
  id        String    @id @default(uuid())
  userId    String?   // Matches User ID type
  User      User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  language  String    @default("en") // Default language
  profileId String?   // Matches User ID type
  profile   Profile?  @relation(fields: [profileId], references: [id]) // Users default Profile
}

model Profile {
  id        String    @id @default(uuid()) // Changed to uuid
  type      String
  image     String
  email     String     // Every Profile can have an own email for notifications. Can be used for logins aswell
  userId    String?    // Matches User ID type
  User      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  interests Interest[] @relation("ProfileInterests")
}

model Interest {
  id       String    @id @default(uuid()) // Changed to uuid
  name     String    @unique() // Ensuring the interest name is unique
  language String    @default("en") // The interest's language
  profiles Profile[] @relation("ProfileInterests")
  same     Interest[] @relation("SameInterests") // List of same / synonymous / translations
  parentId String?
  parent   Interest?  @relation(fields: [parentId], references: [id]) // Superior category
  childs   Interest[] @relation("ChildInterests") // Sub categories
}
